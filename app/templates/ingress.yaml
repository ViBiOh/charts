{{- if .Values.ingress.enabled -}}

{{- $root := . -}}

{{- $customMiddlewares := list -}}
{{- if .Values.ingress.redirect }}
  {{- $redirectMiddleware := printf "%s-%s-%s" .Release.Namespace (include "app.fullname" .) "redirect@kubernetescrd" -}}
  {{- $customMiddlewares = append $customMiddlewares $redirectMiddleware -}}
{{- end -}}
{{- if .Values.linkerd }}
  {{- $linkerdMiddleware := printf "%s-%s-%s" .Release.Namespace (include "app.fullname" .) "l5d@kubernetescrd" -}}
  {{- $customMiddlewares = append $customMiddlewares $linkerdMiddleware -}}
{{- end -}}

{{- $httpMiddlewares := concat $customMiddlewares .Values.ingress.http_middlewares -}}
{{- $httpsMiddlewares := concat $customMiddlewares .Values.ingress.https_middlewares -}}

{{- if .Values.linkerd }}
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: "{{ include "app.fullname" . }}-l5d"
spec:
  headers:
    customRequestHeaders:
      l5d-dst-override: "{{ include "app.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.port }}"
{{- end }}

{{- if .Values.ingress.redirect }}
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: {{ include "app.fullname"  }}-redirect
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  redirectRegex:
    regex: {{ .Values.ingress.redirect.regex }}
    replacement: {{ .Values.ingress.redirect.replacement }}
{{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "app.fullname" . }}-http
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: "web"
    {{- with $httpMiddlewares }}
    traefik.ingress.kubernetes.io/router.middlewares: {{ include "app.joinComma" . }}
    {{- end }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  rules:
    {{- range .Values.ingress.hosts }}
    - host: "{{ . }}"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: {{ include "app.fullname" $root }}
                port:
                  number: {{ $root.Values.service.port }}
    {{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "app.fullname" . }}-https
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    {{- with $httpsMiddlewares }}
    traefik.ingress.kubernetes.io/router.middlewares: {{ include "app.joinComma" . }}
    {{- end }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.clusterIssuer }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  tls:
    {{- range .Values.ingress.hosts }}
    - hosts:
        - {{ . }}
      secretName: "{{ include "app.fullname" $root }}-tls-{{ . | sha256sum | trunc 6 }}"
    {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: "{{ . }}"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: {{ include "app.fullname" $root }}
                port:
                  number: {{ $root.Values.service.port }}
    {{- end }}
{{- end -}}
