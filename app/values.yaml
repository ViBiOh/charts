---
# image is the configuration of image management
image:
  name: vibioh/scratch
  tag: latest
  pullPolicy: Always
  pullSecretNames:
    - dockerhub

# port HTTP listened
port: 1080

# probes for enabling and configuring probes
probes:
  enabled: true
  port: 1080
  initialDelaySeconds: 10
  liveness: /health
  readiness: /ready

# terminationGracePeriodSeconds is the time waiting before SIGKILL
terminationGracePeriodSeconds: 60

# config map created and passed to the pod as a ref
config: {}

# secrets map, in the form of a Sealed Secrets, created and passed to the pod as a ref
secrets: {}

# volumes array for deployment
volumes: []

# volumeMounts array for main container
volumeMounts: []

# strategy defines the rollout strategy for deployment
strategy: {}

# affinity for the deployment
affinity: {}

# securityContext for the main container
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true

# resources requests and limits for defining the QoS
resources:
  limits:
    memory: 64Mi
  requests:
    cpu: 200m
    memory: 64Mi

# service configuration for the service
service:
  type: ClusterIP
  port: 80

# prometheus enable prometheus scraping
prometheus:
  enabled: true
  port: 9090
  path: /metrics

# canary enable canary deployment
canary:
  enabled: false
  url: https://vibioh.fr

# ingress configuration of the Traefik's ingress, if any
ingress:
  enabled: false
  clusterIssuer: letsencrypt
  hosts:
    - example.localhost
  http_middlewares:
    - redirect@file
  https_middlewares:
    - compress@file
  # redirect:
  #   regex: ^https?://www.example.localhost(.*)
  #   replacement: https://example.localhost${1}

# podDisruption configuration for the podDisruption_budget, if any
podDisruption:
  enabled: true
  minAvailable: 1

# autoscaling configuration for the horizontal pod autoscaler, if any
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetAverageUtilization: 75
