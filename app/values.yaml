---
# image is the configuration of image management
image:
  name: vibioh/scratch
  tag: latest
  pullPolicy: Always
  pullSecretNames:
    - dockerhub

# port HTTP listened
port: 1080

# probes for enabling and configuring probes
probes:
  enabled: true
  readiness: /ready
  # initialDelaySeconds: 5

# terminationGracePeriodSeconds is the time waiting before SIGKILL
terminationGracePeriodSeconds: 60

# labels added on the deployment
labels: {}

# podsAnnotations map passed to the pod's spec
podsAnnotations: {}

# config map passed as env var to the pod
config: {}

# env inlined to the pod
env: {}

# secrets map, in the form of a Sealed Secrets,passed as env var to the pod
secrets: {}

# volumes array for deployment
volumes: []

# volumeMounts array for main container
volumeMounts: []

# strategy defines the rollout strategy for deployment
strategy: {}

# nodeSelector for the deployment
nodeSelector: {}

# affinity for the deployment
affinity: {}

# tolerations for the deployment
tolerations: []

# serviceAccountName option
serviceAccountName: ""

# securityContext for the main container
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  capabilities:
    drop:
      - ALL

# podSecurityContext for all containers
podSecurityContext:
  seccompProfile:
    type: RuntimeDefault

# resources requests and limits for defining the QoS
resources:
  limits:
    memory: 64Mi
  requests:
    cpu: 250m
    memory: 64Mi

# service configuration for the service
service:
  type: ClusterIP
  port: 80
  annotations: {}

# pprof enable pprof endpoint
pprof:
  enabled: false
  port: 9999

# autoscaling configuration for the horizontal pod autoscaler, if any
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetAverageUtilization: 80

# initContainers of the pod
initContainers: []

# ingress configuration of the Traefik's ingress, if any
ingress:
  enabled: false
  compress: false
  rateLimit: true
  sticky: false

  tls:
    enabled: false

  hosts:
    - example.localhost
  http_middlewares: []
  https_middlewares: []
  # redirect:
  #   regex: ^https?://www.example.localhost(.*)
  #   replacement: https://example.localhost${1}
