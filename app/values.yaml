---
# namespace is the namespace of every object created
namespace: default

# image is the configuration of image management
image:
  repository: vibioh/scratch
  pullPolicy: Always

# init container of the deployment, if any
init:
  enabled: false

  # configuration of init_container image management
  repository: vibioh/scratch
  pullPolicy: Always

  # command to run inside init_container
  command:
    - /bin/bash
    - "-c"
    - "echo Hello"

  # env variables passed to the pod
  env: {}

  # secretRef passed to init_containers
  secretRef: ""

  # resources requests and limits for defining the QoS
  resources:
    limits:
      cpu: 100m
      memory: 64M
    requests:
      cpu: 100m
      memory: 64M

# port HTTP listened
port: 1080

# podAnnotations placed on the pod
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/scheme: http
  prometheus.io/port: "1080"

# livenessProbePath is the path of liveness
livenessProbePath: /health

# readinessProbePath is the path of readiness
readinessProbePath: /health

# config map created and passed to the pod as a ref
config: {}

# secretRef passed to deployment
secretRef: ""

# resources requests and limits for defining the QoS
resources:
  limits:
    cpu: 100m
    memory: 64M
  requests:
    cpu: 100m
    memory: 64M

# service configuration for the service
service:
  type: ClusterIP
  port: 80

# ingress configuration of the Traefik's ingress, in any
ingress:
  enabled: false
  hosts:
    - example.localhost
  http_middlewares:
    - redirect
  https_middlewares:
    - compress
    - ratelimit
  # redirect:
  #   regex: ^https?://www.example.localhost(.*)
  #   replacement: https://example.localhost${1}

# pod_disruption configuration for the pod_disruption_budget, in any
pod_disruption:
  enabled: true
  minAvailable: 1

# autoscaling configuration for the horizontal pod autoscaler, in any
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
