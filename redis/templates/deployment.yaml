---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "redis.fullname" . }}
  labels: {{- include "redis.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels: {{- include "redis.selectorLabels" . | nindent 6 }}

  {{- if .Values.strategy }}
  strategy: {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}

  template:
    metadata:
      labels: {{- include "redis.selectorLabels" . | nindent 8 }}

      annotations:
      {{- if .Values.prometheus.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/scheme: http
        prometheus.io/port: {{ .Values.prometheus.port | quote }}
        prometheus.io/path: {{ .Values.prometheus.path | quote }}
      {{- end }}

      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.secrets }}
        checksum/secrets: {{ toYaml . | sha256sum }}
      {{- end }}

    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- range . }}
        - name: {{ . }}
        {{- end }}
      {{- end }}

      volumes:
        - name: config
          secret:
            secretName: {{ include "redis.fullname" . }}
        - name: data
          {{- if .Values.persistentvolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "redis.fullname" . }}
          {{- else }}
          emptyDir: {}
          {{- end }}

      containers:
        - name: redis
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          command:
            - redis-server
            - /usr/local/etc/redis/redis.conf

          volumeMounts:
            - name: config
              mountPath: "/usr/local/etc/redis"
              readOnly: true
            - name: data
              mountPath: "/data"

          ports:
            - name: redis
              containerPort: {{ .Values.port }}
              protocol: TCP

          livenessProbe:
            tcpSocket:
              port: {{ .Values.port }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.port }}

          {{- with .Values.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}

          securityContext:
            runAsGroup: {{ .Values.user }}
            runAsUser: {{ .Values.user }}
            runAsNonRoot: true
            allowPrivilegeEscalation: false

        {{- if .Values.prometheus.enabled }}
        - name: exporter
          image: "{{ .Values.prometheus.image.repository }}:{{ .Values.prometheus.image.tag }}"
          imagePullPolicy: {{ .Values.prometheus.image.pullPolicy }}

          {{- if .Values.secrets }}
          envFrom:
            - secretRef:
                name: {{ include "redis.fullname" . }}
          {{- end }}

          env:
            - name: REDIS_ADDR
              value: localhost:{{ .Values.port }}
            - name: REDIS_EXPORTER_LOG_FORMAT
              value: json
            - name: REDIS_EXPORTER_WEB_LISTEN_ADDRESS
              value: 0.0.0.0:{{ .Values.prometheus.port }}
            - name: REDIS_EXPORTER_WEB_TELEMETRY_PATH
              value: {{ .Values.prometheus.path | quote }}

          ports:
            - name: prom
              containerPort: {{ .Values.prometheus.port }}
              protocol: TCP

          livenessProbe:
            tcpSocket:
              port: {{ .Values.prometheus.port }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.prometheus.port }}

          resources:
            limits:
              cpu: 100m
              memory: 32Mi
            requests:
              cpu: 100m
              memory: 32Mi

          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
        {{- end }}
