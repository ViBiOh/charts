---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}

  {{- if .Values.strategy }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}

  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.config }}
        checksum/config: {{ toYaml . | sha256sum }}
      {{- end }}
      {{- with .Values.secrets }}
        checksum/secrets: {{ toYaml . | sha256sum }}
      {{- end }}
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.persistentvolume.enabled }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "app.fullname" . }}
      {{- end }}

      containers:
        - name: {{ include "app.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          {{- if or .Values.config .Values.secrets }}
          envFrom:
          {{- if .Values.config }}
            - configMapRef:
                name: {{ include "app.fullname" . }}
          {{- end }}
          {{- if .Values.secrets }}
            - secretRef:
                name: {{ include "app.fullname" . }}
          {{- end }}
          {{- end }}

          {{- if .Values.persistentvolume.enabled }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          {{- end }}

          ports:
            - name: postgres
              containerPort: {{ .Values.port }}
              protocol: TCP
          readinessProbe:
            exec:
              command: [pg_isready]

          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          securityContext:
            runAsGroup: 999
            runAsUser: 999
            runAsNonRoot: true
            allowPrivilegeEscalation: false
