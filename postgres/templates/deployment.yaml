---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels: {{- include "app.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels: {{- include "app.selectorLabels" . | nindent 6 }}

  {{- if .Values.strategy }}
  strategy: {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}

  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.config }}
        checksum/config: {{ toYaml . | sha256sum }}
      {{- end }}
      {{- with .Values.secrets }}
        checksum/secrets: {{ toYaml . | sha256sum }}
      {{- end }}
      labels: {{- include "app.selectorLabels" . | nindent 8 }}

    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "app.fullname" . }}

      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.image.pullSecretNames }}
      imagePullSecrets:
        {{- range . }}
        - name: {{ . }}
        {{- end }}
      {{- end }}

      automountServiceAccountToken: false

      securityContext:
        seccompProfile:
          type: RuntimeDefault

      containers:
        {{- if .Values.pgBouncer.enabled }}
        - name: pgbouncer
          image: edoburu/pgbouncer:{{ .Values.pgBouncer.version }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_HOST
              value: localhost
            - name: DB_NAME
              value: {{ .Values.config.POSTGRES_DB | quote }}
            - name: DB_USER
              value: {{ .Values.config.POSTGRES_USER | quote }}
            - name: LISTEN_PORT
              value: {{ .Values.pgBouncer.port | quote }}
            - name: POOL_MODE
              value: session
            - name: SERVER_RESET_QUERY
              value: DISCARD ALL

          envFrom:
          {{- if .Values.secrets }}
            - secretRef:
                name: {{ include "app.fullname" . }}
          {{- end }}

          ports:
            - name: pgbouncer
              containerPort: {{ .Values.pgBouncer.port }}
              protocol: TCP

          livenessProbe:
            tcpSocket:
              port: {{ .Values.pgBouncer.port }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.pgBouncer.port }}

          {{- with .Values.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}

          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
        {{- end }}

        - name: {{ include "app.fullname" . }}
          image: "{{ .Values.image.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          {{- if or .Values.config .Values.secrets }}
          envFrom:
          {{- if .Values.config }}
            - configMapRef:
                name: {{ include "app.fullname" . }}
          {{- end }}
          {{- if .Values.secrets }}
            - secretRef:
                name: {{ include "app.fullname" . }}
          {{- end }}
          {{- end }}

          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data

          ports:
            - name: postgres
              containerPort: {{ .Values.port }}
              protocol: TCP

          livenessProbe:
            tcpSocket:
              port: {{ .Values.port }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.port }}

          {{- with .Values.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}

          securityContext:
            runAsGroup: {{ .Values.user }}
            runAsUser: {{ .Values.user }}
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
