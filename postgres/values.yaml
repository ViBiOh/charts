---
# image is the configuration of image management
image:
  repository: postgres:15-alpine
  pullPolicy: Always
  pullSecretNames:
    - dockerhub

# exporter is the configuration of exporter image
exporter:
  repository: quay.io/prometheuscommunity/postgres-exporter
  tag: latest
  pullPolicy: Always

# podAnnotations placed on the pod
podAnnotations: {}

# joblabels placed on the backup job
jobLabels: {}

# config map created and passed to the pod as a ref
config:
  POSTGRES_USER: postgres
  POSTGRES_DB: postgres
  PGDATA: /var/lib/postgresql/data/pgdata

# port used by postgres
port: 5432

# user that run container
user: 70

# persistentVolume for storing databases datas
persistentvolume:
  accessModes:
    - ReadWriteOnce
  storage: 1Gi
  # storageClassName: local-path

# secrets map, in the form of a Sealed Secrets, created and passed to the pod as a ref
secrets:
  POSTGRES_PASSWORD: AgBfBmrdDR1FWjnGAKvs5pFsdwOhy4m6LPTJuaMIN+aC6+AYWhS+dCJxnQ2Q/PdF2MztK8VNIpDuYWvCS0cZAKyMMkkRRrUBVyro0M5IoeaxBWq/unVb9eb/qNEncmfanVLvqS90txXbimMo6BXVxKxnOHIqJVEv4AJN/0RKAssjyaUlo4dkIem7j8vdZHI9/t0kmdstNaM9hiRZzaapOet8yOP1JxZnUkVyzukCzBiPPTpZVROc4rfX4GvBm/lBAGxKSo/LwygbfuUQ9cKt38jzENGmJe+cniQPFQbCkOaDXH7Ti7NyIrJFMbkm89PEFoEYKL1Wsf53ckTNZTAwNl03t0vTJjtSMtNwU+zQ9dn+jAAPKs281CJ0frPSz9fq10BW3ISDuyxZMd+048duTAJ0YHCXaCuffK6IwJ4/O8oKgvH03Z70zFUHMl/kwzLXDYRPD4MccTG8p8cCV6Ar6o+eDthB74EWTR0+UM+S8yyZVtaQKrgjs6wdSA9cUHoU1eu/XCBWik4bMH/5YsxNJTWnRdPnSvISQxqfK8Aw8i/4y5qw5UUuxKngZKJVqQmD8TfUqh+uQc6XVj9mI8B0b3/xlmqYwGPsz+7bScmn7FgPXdnm+4jamprjBe4zXWcRHIyhaFQ5UGWEasvqx9pcojumXK0SU+RKW3FjchDn8l5uN9IPr75ZzHnhlN+JDQrvFA8HQrRU0vevsA==

# strategy defines the rollout strategy for deployment
strategy:
  type: Recreate

# affinity for the deployment
affinity: {}

# resources requests and limits for defining the QoS
resources:
  limits:
    memory: 256Mi
  requests:
    cpu: 250m
    memory: 256Mi

# service configuration for the service
service:
  type: ClusterIP
  port: 80

# databases created on init
databases:
  - name: app
    user: app_user
    password: POSTGRES_PASSWORD
    backup: true

# prometheus configuration
prometheus:
  port: 9090
  path: /metrics

# backup configure cronjob of backup
backup:
  restartPolicy: Never
  concurrencyPolicy: Forbid
  schedule: "0 4 * * *"

  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2
  backoffLimit: 3

  extraArgs: ""

  # uploadCommand is what's called after pg_dump is success, it's appended with the backup filename without space
  uploadCommand: 'apk --no-cache add curl && curl "${FIBR_BACKUP_URL}" -H "Accept: text/plain" --fail-with-body --user "fibr:${FIBR_BACKUP_PASSWORD}" --form method=POST --form file=@'
